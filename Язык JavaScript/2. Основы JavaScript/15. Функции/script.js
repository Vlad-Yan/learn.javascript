//1. Обязателен ли "else"?
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она запрашивает подтверждение через confirm и возвращает его результат:

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    // ...
    return confirm('Родители разрешили?');
  }
}

// Будет ли эта функция работать как-то иначе, если убрать else?
// НЕТ
function checkAge(age) {
  if (age > 18) {
    return true;
  }
  // ...
  return confirm('Родители разрешили?');
}
// Есть ли хоть одно отличие в поведении этого варианта?
// Отличий нет


// 2. Перепишите функцию, используя оператор '?' или '||'
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она задаёт вопрос confirm и возвращает его результат.

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm('Родители разрешили?');
  }
}

// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
// Сделайте два варианта функции checkAge:

// Используя оператор ?
function checkAge(age) {
  return (age > 18) ? true : confirm('Родители разрешили?');
}

// Используя оператор ||
function checkAge(age) {
  return (age > 18) || confirm('Родители разрешили?');
}


// 3. Функция min(a, b)
// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

function min(a, b) {
  return (a < b) ? a : b;
}
min(2, 5)  // 2
min(3, -1)  // -1
min(1, 1)  // 1


// 4. Функция pow(x,n)
// Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.

// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. целые от 1 и выше.

function pow(x, n) {
  let res = x;
  for (let i = 1; i < n; i++) {
    res *= x;
  }
  return res;
}

let x = +prompt("Введите x: ", 0);
    n = +prompt("Введите n: ", 0);

if (n < 1) {
  alert("Используйте натуральное число");
} else {
  alert(pow(x, n));
}