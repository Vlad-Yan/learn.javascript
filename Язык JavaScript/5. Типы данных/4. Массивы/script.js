// 1. Скопирован ли массив?
// Что выведет следующий код?

let fruits = ["Яблоки", "Груша", "Апельсин"];

// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан");

// что в fruits?
alert( fruits.length ); // Ответ: 4, т.к. копия по ссылке


// 2. Операции с массивами
// Давайте произведём 5 операций с массивом.

// Создайте массив styles с элементами «Джаз» и «Блюз».
// Добавьте «Рок-н-ролл» в конец.
// Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
// Удалите первый элемент массива и покажите его.
// Вставьте Рэп и Регги в начало массива.

let styles = ["Джаз", "Блюз"];
styles.push("Рок-н-ролл");
styles[Math.floor((styles.length - 1) / 2)] = "Классика";
alert(styles.shift);
styles.unshift("Рэп", "Регги");


// 3. Вызов в контексте массива
// Каков результат? Почему?
let arr = ["a", "b"];

arr.push(function() {
  alert( this );
});

arr[2]();
// т.к. мы обращаемся ко 2 элементу массива - к анонимной функции, а она в своё очеред выводит на экран весь массив, то есть
// 'a', 'b', function(){...}


// 4. Сумма введённых чисел
// Напишите функцию sumInput(), которая:

// Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
// Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
// Подсчитывает и возвращает сумму элементов массива.
// P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

function sumInput() {
  let arr = []
  let value;
  let sum = 0;
  do {
    value = prompt("Введите число", 0);
    if (!isFinite(value) || value === "" || value === null) break;
    arr.push(+value);
  } while (true);

  for (let num of arr) {
    sum += num
  }

  return sum;
}

alert(sumInput());


// 5. Подмассив наибольшей суммы
// На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
// Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
// Функция getMaxSubSum(arr) должна возвращать эту сумму.

function getMaxSubSum(arr) {
  let newArr = [];
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    for (let j = i; j < arr.length; j++) {
      sum += arr[j];
      newArr.push(sum);
    }
    sum = 0
  }
  return Math.max(...newArr)
}

console.log(getMaxSubSum([-1, 2, 3, -9]))  // == 5 (сумма выделенных элементов)
console.log(getMaxSubSum([2, -1, 2, 3, -9]))  // == 6
console.log(getMaxSubSum([-1, 2, 3, -9, 11]))  // == 11
console.log(getMaxSubSum([-2, -1, 1, 2]))  // == 3
console.log(getMaxSubSum([100, -9, 2, -3, 5]))  //  == 100
console.log(getMaxSubSum([1, 2, 3]))  // == 6 (берём все)